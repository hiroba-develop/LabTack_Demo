openapi: 3.0.0
info:
  title: LabTack API
  version: 1.0.0
  description: API for LabTack, a research lab management application.
servers:
  - url: http://localhost:8080/api/v1
    description: Development server
tags:
  - name: auth
    description: Authentication
  - name: users
    description: User management
  - name: channels
    description: Channel management for Home feature
  - name: messages
    description: Chat messages in channels
  - name: files
    description: File management

paths:
  /auth/google:
    get:
      tags:
        - auth
      summary: Redirect to Google for authentication
      responses:
        '302':
          description: Redirect to Google's OAuth 2.0 consent screen.

  /auth/google/callback:
    get:
      tags:
        - auth
      summary: Google OAuth 2.0 callback
      description: Handles the callback from Google after user authentication.
      responses:
        '200':
          description: Authentication successful. Returns JWT token.
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        '401':
          description: Authentication failed.

  /users/me:
    get:
      tags:
        - users
      summary: Get current user's profile
      security:
        - bearerAuth: []
      responses:
        '200':
          description: A user object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  
  /channels:
    get:
      tags:
        - channels
      summary: List all channels (and root directories)
      security:
        - bearerAuth: []
      responses:
        '200':
          description: A list of channels.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Channel'

  /channels/{channelId}/messages:
    get:
      tags:
        - messages
      summary: Get messages for a channel
      security:
        - bearerAuth: []
      parameters:
        - name: channelId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A list of messages.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Message'
    post:
      tags:
        - messages
      summary: Post a new message to a channel
      security:
        - bearerAuth: []
      parameters:
        - name: channelId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
      responses:
        '201':
          description: Message created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'

  /files:
    get:
      tags:
        - files
      summary: List files and folders in a directory
      security:
        - bearerAuth: []
      parameters:
        - name: parentId
          in: query
          description: The ID of the parent folder. If not provided, lists root items.
          schema:
            type: string
      responses:
        '200':
          description: A list of files and folders.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/File'
    post:
      tags:
        - files
      summary: Upload a new file
      security:
        - bearerAuth: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                parentId:
                  type: string
      responses:
        '201':
          description: File uploaded successfully.

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    User:
      type: object
      properties:
        id:
          type: string
        googleId:
          type: string
        name:
          type: string
        email:
          type: string
          format: email
        avatarUrl:
          type: string
          format: uri
        role:
          type: string
          enum: [admin, general]
    
    Channel:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        type:
          type: string
          enum: [directory, file_link]
        parentId:
          type: string
          nullable: true
        children:
          type: array
          items:
            $ref: '#/components/schemas/Channel'

    Message:
      type: object
      properties:
        id:
          type: string
        channelId:
          type: string
        userId:
          type: string
        content:
          type: string
        createdAt:
          type: string
          format: date-time
        
    File:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        type:
          type: string
          enum: [folder, file]
        parentId:
          type: string
          nullable: true
        ownerId:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
